控制方代码

/*!
 * MindPlus
 * mpython
 *
 */
#include <MPython.h>
#include <DFRobot_Iot.h>
#include <mPython_tinywebdb.h>

// 动态变量
String         mind_s_TiMu, mind_s_topic1mqttXinXi, mind_s_QiangDanum;
volatile float mind_n_Starttime, mind_n_Totaltime, mind_n_ms, mind_n_s, mind_n_min,
               mind_n_flag, mind_n_grade1, mind_n_grade2, mind_n_grade3, mind_n_count,
               mind_n_DuiCuoflag;
// 函数声明
void DF_XianShiShiJian();
void DF_DaoShuShiJian();
void obloqMqttEventT1(String& message);
void obloqMqttEventT4(String& message);
// 静态常量
const String topics[5] = {"FNIITM0MR","spNIoM0GR","H-DSTMAGR","LNJvTGAGg","PCOBUDAGg"};
const MsgHandleCb msgHandles[5] = {NULL,obloqMqttEventT1,NULL,NULL,obloqMqttEventT4};
// 创建对象
DFRobot_Iot       myIot;
mPython_TinyWebDB mydb;


// 主程序开始
void setup() {
	mPython.begin();
	dfrobotRandomSeed();
	myIot.setMqttCallback(msgHandles);
	myIot.wifiConnect("su", "s1234567");
	while (!myIot.wifiStatus()) {yield();}
	display.setCursorLine(1);
	display.printLine("wifi is ok!");
	myIot.init("iot.dfrobot.com.cn","eIkSoG0MR","","6SkSTMAMgz",topics,1883);
	myIot.connect();
	while (!myIot.connected()) {yield();}
	display.setCursorLine(2);
	display.printLine("mqtt is ok too!");
	delay(3000);
	display.fillScreen(0);
	display.setCursorLine(1);
	display.printLine("主持人请按下A，出题！");
	mydb.setServerParameter("http://tinywebdb.appinventor.space/api", "aaaaab","a46a5f05");
	mind_n_flag = 0;
	mind_n_grade1 = 0;
	mind_n_grade2 = 0;
	mind_n_grade3 = 0;
}
void loop() {
	if ((buttonA.isPressed())) {
		mind_n_count = 0;
		mind_n_DuiCuoflag = 0;
		delay(1000);
		display.fillScreen(0);
		display.setCursorLine(1);
		display.printLine("请看题目：");
		mind_s_TiMu = (random(6, 10+1));
		display.setCursorLine(2);
		display.printLine(mydb.getTag(mind_s_TiMu));
		myIot.publish(topic_0, mydb.getTag(mind_s_TiMu));
		delay(3000);
		DF_DaoShuShiJian();
		mind_n_Starttime = millis();
		display.setCursor(36, 23);
		display.print("：");
		display.setCursor(68, 23);
		display.print("：");
		while (!(mind_n_flag>0)) {
			DF_XianShiShiJian();
			yield();
		}
		if (((mind_n_flag==1) && (mind_n_count==1))) {
			mind_s_QiangDanum = mind_s_topic1mqttXinXi;
			myIot.publish(topic_3, mind_s_QiangDanum);
			display.fillScreen(0);
			display.setCursorLine(1);
			display.printLine(mydb.getTag(mind_s_QiangDanum));
			display.setCursorLine(2);
			display.printLine("抢答成功，请作答！");
			myIot.publish(topic_2, "请您作答");
		}
		delay(9000);
		if ((mind_n_DuiCuoflag==1)) {
			display.setCursorLine(4);
			display.printLine("恭喜您！答对了");
		}
		else if ((mind_n_DuiCuoflag==2)) {
			display.setCursorLine(4);
			display.printLine("很遗憾！答错了");
		}
		else {
			display.setCursorLine(4);
			display.printLine("没有在规定时间作答");
		}
		mind_n_flag = 0;
	}
	if ((buttonAB.isPressed())) {
		display.fillScreen(0);
		display.setCursorLine(1);
		display.printLine((String("抢答人1：") + String((String((String(mind_n_grade1).toInt())) + String("分")))));
		display.setCursorLine(2);
		display.printLine((String("抢答人2：") + String((String((String(mind_n_grade3).toInt())) + String("分")))));
		display.setCursorLine(3);
		display.printLine((String("抢答人3：") + String((String((String(mind_n_grade2).toInt())) + String("分")))));
		delay(10000);
		mind_n_grade1 = 0;
		mind_n_grade2 = 0;
		mind_n_grade3 = 0;
	}
}


// 自定义函数
void DF_XianShiShiJian() {
	mind_n_Totaltime = (millis() - mind_n_Starttime);
	mind_n_ms = (((int)(mind_n_Totaltime / 10)) % ((int)100));
	if ((mind_n_ms<10)) {
		display.setCursor(84, 23);
		display.print((String("0") + String((((int)mind_n_ms) % ((int)100)))));
	}
	else {
		display.setCursor(84, 22);
		display.print(mind_n_ms);
	}
	mind_n_Totaltime = ((millis() - mind_n_Starttime) / 1000);
	mind_n_s = (((int)mind_n_Totaltime) % ((int)60));
	if ((mind_n_s<10)) {
		display.setCursor(52, 23);
		display.print((String("0") + String((((int)mind_n_s) % ((int)100)))));
	}
	else {
		display.setCursor(52, 22);
		display.print(mind_n_s);
	}
	mind_n_min = (((int)(mind_n_Totaltime / 60)) % ((int)60));
	if ((mind_n_min<10)) {
		display.setCursor(20, 23);
		display.print((String("0") + String((((int)mind_n_min) % ((int)100)))));
	}
	else {
		display.setCursor(20, 22);
		display.print(mind_n_min);
	}
}
void DF_DaoShuShiJian() {
	display.fillScreen(0);
	display.setCursorLine(1);
	display.printLine("5秒后开始抢答");
	display.setCursorLine(2);
	display.printLine("5");
	delay(1000);
	display.setCursorLine(2);
	display.printLine("4");
	delay(1000);
	display.setCursorLine(2);
	display.printLine("3");
	delay(1000);
	display.setCursorLine(2);
	display.printLine("2");
	delay(1000);
	display.setCursorLine(2);
	display.printLine("1");
	delay(1000);
	display.setCursorLine(2);
	display.printLine("开始抢答！");
	myIot.publish(topic_0, "请按B键，开始抢答！");
	display.fillScreen(0);
}

// 事件回调函数
void obloqMqttEventT1(String& message) {
	mind_s_topic1mqttXinXi = message;
	mind_n_flag = 1;
	mind_n_count += 1;
}
void obloqMqttEventT4(String& message) {
	if (((String(message).toInt())==11)) {
		mind_n_grade1 += 1;
		mind_n_DuiCuoflag = 1;
	}
	else if (((String(message).toInt())==21)) {
		mind_n_grade2 += 1;
		mind_n_DuiCuoflag = 1;
	}
	else if (((String(message).toInt())==31)) {
		mind_n_grade3 += 1;
		mind_n_DuiCuoflag = 1;
	}
	else {
		mind_n_DuiCuoflag = 2;
	}
}


抢答方1代码
/*!
 * MindPlus
 * mpython
 *
 */
#include <MPython.h>
#include <DFRobot_Iot.h>

// 动态变量
String         mind_s_topic2mqttXinXi;
volatile float mind_n_ZuoDaflag, mind_n_flag, mind_n_TiXingZuoDaflag, mind_n_WeiYiflag;
// 函数声明
void DF_ZuoDa();
void obloqMqttEventT0(String& message);
void obloqMqttEventT2(String& message);
void obloqMqttEventT3(String& message);
// 静态常量
const String topics[5] = {"FNIITM0MR","spNIoM0GR","H-DSTMAGR","LNJvTGAGg","PCOBUDAGg"};
const MsgHandleCb msgHandles[5] = {obloqMqttEventT0,NULL,obloqMqttEventT2,obloqMqttEventT3,NULL};
// 创建对象
DFRobot_Iot myIot;


// 主程序开始
void setup() {
	mPython.begin();
	myIot.setMqttCallback(msgHandles);
	myIot.wifiConnect("su", "s1234567");
	while (!myIot.wifiStatus()) {yield();}
	display.setCursorLine(1);
	display.printLine("WiFi is ok!");
	myIot.init("iot.dfrobot.com.cn","eIkSoG0MR","","6SkSTMAMgz",topics,1883);
	myIot.connect();
	while (!myIot.connected()) {yield();}
	display.setCursorLine(2);
	display.printLine("mqtt is ok too!");
	mind_n_flag = 0;
	mind_n_TiXingZuoDaflag = 0;
	mind_n_WeiYiflag = 0;
}
void loop() {
	if (((mind_n_flag==1) && (buttonB.isPressed()))) {
		myIot.publish(topic_1, "1");
		mind_n_flag = 0;
	}
	if (((mind_n_TiXingZuoDaflag==1) && (mind_n_WeiYiflag==1))) {
		display.fillScreen(0);
		display.setCursorLine(1);
		display.printLine(mind_s_topic2mqttXinXi);
		DF_ZuoDa();
		delay(1000);
		display.setCursorLine(3);
		display.printLine("清屏");
		display.fillScreen(0);
		mind_n_TiXingZuoDaflag = 0;
		mind_n_WeiYiflag = 0;
	}
}


// 自定义函数
void DF_ZuoDa() {
	display.setCursorLine(2);
	display.printLine("A.对     B.错");
	display.setCursorLine(3);
	display.printLine("请在5秒后作答：");
	display.setCursorLine(3);
	display.printLine("5");
	delay(1000);
	display.setCursorLine(3);
	display.printLine("4");
	delay(1000);
	display.setCursorLine(3);
	display.printLine("3");
	delay(1000);
	display.setCursorLine(3);
	display.printLine("2");
	delay(1000);
	display.setCursorLine(3);
	display.printLine("1");
	delay(1000);
	display.setCursorLine(3);
	display.printLine("作答");
	display.fillInLine(3, 0);
	mind_n_ZuoDaflag = 0;
	while (!(mind_n_ZuoDaflag==1)) {
		if ((buttonA.isPressed())) {
			myIot.publish(topic_4, "11");
			mind_n_ZuoDaflag = 1;
		}
		if ((buttonB.isPressed())) {
			myIot.publish(topic_4, "10");
			mind_n_ZuoDaflag = 1;
		}
		yield();
	}
}

// 事件回调函数
void obloqMqttEventT0(String& message) {
	display.fillScreen(0);
	display.setCursorLine(1);
	display.printLine(message);
	mind_n_flag = 1;
}
void obloqMqttEventT2(String& message) {
	mind_s_topic2mqttXinXi = message;
	mind_n_TiXingZuoDaflag = 1;
}
void obloqMqttEventT3(String& message) {
	mind_n_WeiYiflag = (String(message).toInt());
}

抢答方2代码
/*!
 * MindPlus
 * mpython
 *
 */
#include <MPython.h>
#include <DFRobot_Iot.h>

// 动态变量
String         mind_s_topic2mqttXinXi;
volatile float mind_n_ZuoDaflag, mind_n_flag, mind_n_TiXingZuoDaflag, mind_n_WeiYiflag;
// 函数声明
void DF_ZuoDa();
void obloqMqttEventT0(String& message);
void obloqMqttEventT2(String& message);
void obloqMqttEventT3(String& message);
// 静态常量
const String topics[5] = {"FNIITM0MR","spNIoM0GR","H-DSTMAGR","LNJvTGAGg","PCOBUDAGg"};
const MsgHandleCb msgHandles[5] = {obloqMqttEventT0,NULL,obloqMqttEventT2,obloqMqttEventT3,NULL};
// 创建对象
DFRobot_Iot myIot;


// 主程序开始
void setup() {
	mPython.begin();
	myIot.setMqttCallback(msgHandles);
	myIot.wifiConnect("su", "s1234567");
	while (!myIot.wifiStatus()) {yield();}
	display.setCursorLine(1);
	display.printLine("WiFi is ok!");
	myIot.init("iot.dfrobot.com.cn","eIkSoG0MR","","6SkSTMAMgz",topics,1883);
	myIot.connect();
	while (!myIot.connected()) {yield();}
	display.setCursorLine(2);
	display.printLine("mqtt is ok too!");
	mind_n_flag = 0;
	mind_n_TiXingZuoDaflag = 0;
	mind_n_WeiYiflag = 0;
}
void loop() {
	if (((mind_n_flag==1) && (buttonB.isPressed()))) {
		myIot.publish(topic_1, "2");
		mind_n_flag = 0;
	}
	if (((mind_n_TiXingZuoDaflag==1) && (mind_n_WeiYiflag==2))) {
		display.fillScreen(0);
		display.setCursorLine(1);
		display.printLine(mind_s_topic2mqttXinXi);
		DF_ZuoDa();
		delay(1000);
		display.setCursorLine(3);
		display.printLine("清屏");
		display.fillScreen(0);
		mind_n_TiXingZuoDaflag = 0;
		mind_n_WeiYiflag = 0;
	}
}


// 自定义函数
void DF_ZuoDa() {
	display.setCursorLine(2);
	display.printLine("A.对     B.错");
	display.setCursorLine(3);
	display.printLine("请在5秒后作答：");
	display.setCursorLine(3);
	display.printLine("5");
	delay(1000);
	display.setCursorLine(3);
	display.printLine("4");
	delay(1000);
	display.setCursorLine(3);
	display.printLine("3");
	delay(1000);
	display.setCursorLine(3);
	display.printLine("2");
	delay(1000);
	display.setCursorLine(3);
	display.printLine("1");
	delay(1000);
	display.setCursorLine(3);
	display.printLine("作答");
	display.fillInLine(3, 0);
	mind_n_ZuoDaflag = 0;
	while (!(mind_n_ZuoDaflag==1)) {
		if ((buttonA.isPressed())) {
			myIot.publish(topic_4, "21");
			mind_n_ZuoDaflag = 1;
		}
		if ((buttonB.isPressed())) {
			myIot.publish(topic_4, "20");
			mind_n_ZuoDaflag = 1;
		}
		yield();
	}
}

// 事件回调函数
void obloqMqttEventT0(String& message) {
	display.fillScreen(0);
	display.setCursorLine(1);
	display.printLine(message);
	mind_n_flag = 1;
}
void obloqMqttEventT2(String& message) {
	mind_s_topic2mqttXinXi = message;
	mind_n_TiXingZuoDaflag = 1;
}
void obloqMqttEventT3(String& message) {
	mind_n_WeiYiflag = (String(message).toInt());
}

抢答方3代码
/*!
 * MindPlus
 * mpython
 *
 */
#include <MPython.h>
#include <DFRobot_Iot.h>

// 动态变量
String         mind_s_topic2mqttXinXi;
volatile float mind_n_ZuoDaflag, mind_n_flag, mind_n_TiXingZuoDaflag, mind_n_WeiYiflag;
// 函数声明
void DF_ZuoDa();
void obloqMqttEventT0(String& message);
void obloqMqttEventT2(String& message);
void obloqMqttEventT3(String& message);
// 静态常量
const String topics[5] = {"FNIITM0MR","spNIoM0GR","H-DSTMAGR","LNJvTGAGg","PCOBUDAGg"};
const MsgHandleCb msgHandles[5] = {obloqMqttEventT0,NULL,obloqMqttEventT2,obloqMqttEventT3,NULL};
// 创建对象
DFRobot_Iot myIot;


// 主程序开始
void setup() {
	mPython.begin();
	myIot.setMqttCallback(msgHandles);
	myIot.wifiConnect("su", "s1234567");
	while (!myIot.wifiStatus()) {yield();}
	display.setCursorLine(1);
	display.printLine("WiFi is ok!");
	myIot.init("iot.dfrobot.com.cn","eIkSoG0MR","","6SkSTMAMgz",topics,1883);
	myIot.connect();
	while (!myIot.connected()) {yield();}
	display.setCursorLine(2);
	display.printLine("mqtt is ok too!");
	mind_n_flag = 0;
	mind_n_TiXingZuoDaflag = 0;
	mind_n_WeiYiflag = 0;
}
void loop() {
	if (((mind_n_flag==1) && (buttonB.isPressed()))) {
		myIot.publish(topic_1, "3");
		mind_n_flag = 0;
	}
	if (((mind_n_TiXingZuoDaflag==1) && (mind_n_WeiYiflag==3))) {
		display.fillScreen(0);
		display.setCursorLine(1);
		display.printLine(mind_s_topic2mqttXinXi);
		DF_ZuoDa();
		delay(1000);
		display.setCursorLine(3);
		display.printLine("清屏");
		display.fillScreen(0);
		mind_n_TiXingZuoDaflag = 0;
		mind_n_WeiYiflag = 0;
	}
}


// 自定义函数
void DF_ZuoDa() {
	display.setCursorLine(2);
	display.printLine("A.对     B.错");
	display.setCursorLine(3);
	display.printLine("请在5秒后作答：");
	display.setCursorLine(3);
	display.printLine("5");
	delay(1000);
	display.setCursorLine(3);
	display.printLine("4");
	delay(1000);
	display.setCursorLine(3);
	display.printLine("3");
	delay(1000);
	display.setCursorLine(3);
	display.printLine("2");
	delay(1000);
	display.setCursorLine(3);
	display.printLine("1");
	delay(1000);
	display.setCursorLine(3);
	display.printLine("作答");
	display.fillInLine(3, 0);
	mind_n_ZuoDaflag = 0;
	while (!(mind_n_ZuoDaflag==1)) {
		if ((buttonA.isPressed())) {
			myIot.publish(topic_4, "31");
			mind_n_ZuoDaflag = 1;
		}
		if ((buttonB.isPressed())) {
			myIot.publish(topic_4, "30");
			mind_n_ZuoDaflag = 1;
		}
		yield();
	}
}

// 事件回调函数
void obloqMqttEventT0(String& message) {
	display.fillScreen(0);
	display.setCursorLine(1);
	display.printLine(message);
	mind_n_flag = 1;
}
void obloqMqttEventT2(String& message) {
	mind_s_topic2mqttXinXi = message;
	mind_n_TiXingZuoDaflag = 1;
}
void obloqMqttEventT3(String& message) {
	mind_n_WeiYiflag = (String(message).toInt());
}
